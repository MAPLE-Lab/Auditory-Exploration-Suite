type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-1.5,y=-1.5,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic Number", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", autorange = "reversed")
)
)
for(i in 2:numberOfHarmonics) {
#plotsHarmonicData.1 # Known at minimum there is the 1st harmonic used
print(i)
temp_lister_name <- paste0("plotsHarmonicData.", i)
print(temp_lister_name)
print("Next step:")
if(i == 2) { # For the 2nd harmonic
temp_total_names <- paste(temp_lister_name,"plotsHarmonicData.1")   # Clears any old data automatically as well
} else { # For all other harmonics
print(i)
print(temp_total_names)
temp_total_names <- paste(temp_total_names, temp_lister_name, sep = ", ")
print(temp_total_names)
print("Next step:")
}
}
test_bind_rev <- eval(parse(text=paste0("rbind(", temp_total_names, ")")))
# Combine all the data
for(i in 2:numberOfHarmonics) {
#plotsHarmonicData.1 # Known at minimum there is the 1st harmonic used
print(i)
temp_lister_name <- paste0("plotsHarmonicData.", i)
print(temp_lister_name)
print("Next step:")
if(i == 2) { # For the 2nd harmonic
temp_total_names <- paste(temp_lister_name,", plotsHarmonicData.1")   # Clears any old data automatically as well
} else { # For all other harmonics
print(i)
print(temp_total_names)
temp_total_names <- paste(temp_total_names, temp_lister_name, sep = ", ")
print(temp_total_names)
print("Next step:")
}
}
test_bind_rev <- eval(parse(text=paste0("rbind(", temp_total_names, ")")))
View(test_bind_rev)
test_bind_subset = test_bind_rev[1:(numberOfTimeBins+(numberOfHarmonics-1)*numberOfTimeBins),]
test_bind_subset_blank <- test_bind_subset # Creates a duplicate matrix
test_bind_subset_blank[,"intensity"] <- 0
mesh3d_data_points = rbind(test_bind_subset,test_bind_subset_blank)
n = numberOfTimeBins*numberOfHarmonics
p <- plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-1.5,y=-1.5,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic Number", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", autorange = "reversed")
)
)
p
View(mesh3d_data_points)
test_bind_subset = test_bind[1:(numberOfTimeBins+(numberOfHarmonics-1)*numberOfTimeBins),]
test_bind_subset_blank <- test_bind_subset # Creates a duplicate matrix
test_bind_subset_blank[,"intensity"] <- 0
mesh3d_data_points = rbind(test_bind_subset,test_bind_subset_blank)
n = numberOfTimeBins*numberOfHarmonics
p <- plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-1.5,y=-1.5,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic Number", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", autorange = "reversed")
)
)
p
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-1.5,y=-1.5,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", autorange = "reversed")
)
)
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-1.5,y=-1.5,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", range = c(0,1))
)
)
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-1,y=-1.5,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", range = c(0,1))
)
)
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-1.25,y=-2,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", range = c(0,1))
)
)
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-1.25,y=-1,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", range = c(0,1))
)
)
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-2,y=-1,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Relative Intensity", range = c(0,1))
)
)
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-2,y=-1,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Intensity", range = c(0,1))
)
)
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-2,y=-1,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0, showline = TRUE), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Intensity", range = c(0,1), showline = TRUE)
)
)
p <- plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-2,y=-1,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Intensity", range = c(0,1))
)
)
p
plot_ly(
) %>% add_trace(type = 'mesh3d',
x = mesh3d_data_points[,"time"],
y = mesh3d_data_points[,"harmonic"],
z = mesh3d_data_points[,"intensity"],
i = c(((1:(n-1))-1),
(((n+1):(2*n-1))-1)),
j = c(((2:n)-1),
((2:n)-1)),
k = c((((n+1):(2*n-1))-1),
(((n+1):(2*n-1)))),
delaunayaxis = "z", # The axis on which the surface is 'projected' onto, if i,j,k are not provided
intensity = 0, colors = 'white', opacity = 0.5,
showscale = FALSE,
lightposition = list(x = 0, y = 0, z = 0),
lighting = list(specular = 0, fresnel = 0, ambient = 1), flatshading = FALSE # flatshading TRUE causes artifacts to appear
#scene = list(xaxis = list(visible = FALSE))
) %>% add_trace(
data = test_bind, x = ~time, y = ~harmonic, z = ~intensity,
type = 'scatter3d',
mode = "lines+markers", color = ~harmonic, opacity = 1, # This opacity sets the opacity of the fillcolor as well, though not used as a separate set of mesh3ds are used
showlegend = FALSE,
projection = list(x = list(show = TRUE, scale = 0.5)),
line = list(width = 1, color = "black"),
marker = list(symbol = "circle-open", size = 1.5)
) %>% layout(
font = list(family = "Times New Roman"),
#title = "MAESTRO Sound Analysis",
scene = list(
camera = list(
eye = list(x=-2,y=-1,z=1)
),
xaxis = list(title = "Time (s)", visible = TRUE, range = c(0,soundfileDuration), showline = TRUE),
yaxis = list(title = "Harmonic", visible = TRUE, type = "linear", dtick = 1, tickangle = 0), # Does not seem to work if in reverse direction (i.e. 16,0) #range = c(0,16), mirror = TRUE
zaxis = list(title = "Intensity", range = c(0,1))
)
)
