////////////////////////////START OF PROGRAM/////////////////////////

//BLOCK1 - Replace the Env section to plot the envelope, to pretest
Env([0,0.2,0.9,1,0.4,0]*0.2, [0.2,0.1,0.1,1,5]*1,[2,0.1,-10,6,-20]).plot; //see below in BLOCK2 for the relevant arg locations

//BLOCK2 - Define the sound
(

var horn1Env, horn2Env, horn3Env, horn4Env, horn5Env, horn6Env, horn7Env, horn8Env;


horn1Env =
Env([
0	,
32.36819654	,
96.28127187	,
95.941804	,
123.5142231	,
123.5142231	,
123.5142231	,
125.0890436	,
125.0890436	,
125.0890436	,
126.0626641	,
124.7171529	,
124.7171529	,
125.0731667	,
123.9784168	,
125.1979221	,
125.8015558	,
125.6925962	,
125.6925962	,
124.4700765	,
125.6925962	,
126.4192689	,
125.4452214	,
125.4452214	,
127.0238078	,
127.0238078	,
126.049039	,
126.7737565	,
126.7601195	,
126.7601195	,
125.3045465	,
127.642443	,
126.6669396	,
126.6669396	,
126.6669396	,
128.0133914	,
126.5419588	,
127.0238078	,
127.0238078	,
127.3944783	,
127.3944783	,
127.9997339	,
128.24788	,
127.8904821	,
127.642443	,
125.5382618	,
125.5382618	,
125.5382618	,
125.5382618	,
125.1820431	,
123.5911926	,
122.867068	,
123.4689503	,
123.4689503	,
123.4983773	,
124.8713307	,
127.4558938	,
129.6721638	,
128.8492014	,
44.51250308	,
41.11007647	,
0	,
]*0.005, [
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn1Env.plot;

horn2Env =
Env([
0	,
12.68888786	,
75.2700731	,
75.2700731	,
106.0986104	,
106.0986104	,
109.4802411	,
112.8024935	,
112.195669	,
113.5036555	,
114.4627093	,
112.287106	,
113.6108994	,
113.2601813	,
113.2601813	,
114.7088236	,
116.1580909	,
116.1580909	,
116.1580909	,
116.1580909	,
115.8061529	,
115.2102572	,
114.0064982	,
113.4120638	,
116.6896758	,
113.8969606	,
113.8969606	,
115.2259325	,
115.2259325	,
112.195669	,
110.7676536	,
114.8744379	,
111.2529902	,
111.6027276	,
114.6305055	,
114.279296	,
111.618325	,
115.496944	,
115.496944	,
110.8455521	,
111.7876902	,
111.4378617	,
111.0882055	,
111.0882055	,
111.0882055	,
107.7142112	,
107.127281	,
106.1759827	,
106.1759827	,
102.3777287	,
100.1199105	,
98.34828526	,
100.6129185	,
99.90967762	,
97.58651387	,
100.5493537	,
96.04405941	,
81.92174364	,
81.92174364	,
8.797003011	,
0	,
]*0.005, [
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn2Env.plot;

horn3Env =
Env([
0	,
18.67297728	,
52.62316842	,
52.62316842	,
83.43608215	,
83.43608215	,
91.27007024	,
91.96109021	,
92.65510844	,
91.49240087	,
91.49240087	,
94.79426232	,
94.79426232	,
94.79426232	,
97.74359281	,
98.4291014	,
101.9953798	,
102.4744506	,
102.8460849	,
104.3788397	,
105.0715119	,
105.0715119	,
105.4313689	,
106.1384007	,
104.9501317	,
106.0322984	,
107.1029288	,
108.4014489	,
108.4014489	,
107.7053482	,
111.0792993	,
109.8824422	,
109.8824422	,
109.8824422	,
113.3874925	,
111.9570957	,
114.6193179	,
115.5820756	,
115.5820756	,
112.8091893	,
114.2681138	,
113.6734656	,
111.8657009	,
115.4879834	,
114.420207	,
116.0841028	,
115.2438475	,
113.7963794	,
114.1630091	,
111.758717	,
111.758717	,
112.5949553	,
111.7453452	,
111.7453452	,
108.9428546	,
105.9416826	,
101.5013	,
92.61184298	,
92.03672127	,
9.946960868	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn3Env.plot;

horn4Env =
Env([
0	,
17.83805083	,
53.14154396	,
53.14154396	,
94.07817401	,
94.07817401	,
94.92020995	,
96.44672297	,
96.44672297	,
98.31770894	,
99.60102566	,
96.29868563	,
97.59087663	,
97.23541383	,
96.29868563	,
98.05132228	,
98.52740555	,
98.87050007	,
98.87050007	,
95.67863086	,
96.86490648	,
97.20489294	,
95.10049187	,
95.10049187	,
97.6955922	,
95.6938526	,
94.37752336	,
95.05704544	,
95.05704544	,
93.28498696	,
88.71634329	,
92.46043943	,
90.35791805	,
90.35791805	,
88.84740451	,
90.35791805	,
84.21730261	,
84.21730261	,
84.21730261	,
82.60932682	,
81.69911682	,
79.6387245	,
79.30741505	,
77.94447682	,
77.61433336	,
68.22173866	,
66.12413813	,
71.02147743	,
70.13163358	,
72.70270841	,
70.13163358	,
71.69733798	,
74.73286574	,
75.63205106	,
76.87287749	,
82.59658531	,
73.22916087	,
43.99845147	,
43.99845147	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn4Env.plot;

horn5Env =
Env([
0	,
20.65160075	,
29.34330343	,
29.02951085	,
66.22650528	,
66.22650528	,
72.16857672	,
77.03241237	,
77.03241237	,
77.70683447	,
78.94049554	,
79.27155434	,
78.26432459	,
78.26432459	,
78.59491854	,
77.03241237	,
77.36214946	,
76.11792546	,
76.11792546	,
72.59458257	,
71.03805026	,
67.12026424	,
64.68155596	,
64.80802782	,
62.94984233	,
61.07255561	,
61.72153428	,
63.14276709	,
64.34925515	,
64.02945811	,
68.94052848	,
70.84128928	,
70.84128928	,
72.16857672	,
75.4499802	,
77.17520007	,
76.61689564	,
79.81396647	,
79.81396647	,
78.90887759	,
78.57806748	,
77.33063594	,
80.8773163	,
79.16609701	,
79.16609701	,
76.75955676	,
76.75955676	,
75.63205106	,
75.30353884	,
74.30480924	,
74.30480924	,
73.41033864	,
74.07737367	,
73.74998526	,
73.42491937	,
70.61150431	,
33.3411239	,
36.71350111	,
36.71350111	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn5Env.plot;

horn6Env =
Env([
0	,
0	,
11.24323172	,
12.10242314	,
30.74419445	,
30.46341382	,
22.06725941	,
14.46423499	,
14.46423499	,
9.921179611	,
21.32625686	,
25.27298073	,
26.97478886	,
27.72796689	,
32.47302624	,
26.371577	,
34.13123736	,
34.13123736	,
35.61657887	,
38.11204253	,
38.11204253	,
36.60815911	,
39.637865	,
41.77877686	,
39.22968689	,
44.36907478	,
46.86843917	,
48.54324849	,
50.86767856	,
44.44747218	,
57.89332635	,
47.71134178	,
48.8599869	,
49.1654034	,
53.210595	,
52.33971385	,
58.5765987	,
60.31789084	,
60.31789084	,
52.20595193	,
51.21834565	,
46.03202011	,
42.90698782	,
44.97393432	,
44.97393432	,
47.37270653	,
45.10236399	,
39.43742665	,
39.43742665	,
36.80225233	,
35.58348843	,
37.48395135	,
31.65592566	,
31.93868361	,
30.67798059	,
18.55905407	,
11.78388851	,
7.675748211	,
8.647934216	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn6Env.plot;

horn7Env =
Env([
0	,
0.835956493	,
26.26549601	,
26.26549601	,
42.64104971	,
44.499113	,
45.32103336	,
47.93410163	,
50.67978286	,
50.46658871	,
50.46658871	,
47.81591958	,
47.81591958	,
48.96694238	,
45.71279748	,
49.62901879	,
44.06909519	,
42.20289153	,
41.39319079	,
40.07120198	,
41.39319079	,
45.62248581	,
43.7580306	,
44.0576381	,
48.43645434	,
49.56469101	,
47.88372275	,
49.47114914	,
49.47114914	,
51.16150546	,
44.18942622	,
51.06744909	,
50.62891511	,
50.62891511	,
45.15413736	,
49.59003053	,
40.12378454	,
39.82910523	,
39.53481334	,
46.13209734	,
45.83197976	,
50.57414433	,
52.69801279	,
53.00743168	,
52.37709902	,
32.98178038	,
31.53000386	,
45.54180823	,
45.54180823	,
46.06665793	,
39.86662251	,
37.12429751	,
45.73970486	,
44.39392986	,
47.12914972	,
50.50569527	,
22.34680014	,
13.16089636	,
12.75825643	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn7Env.plot;

horn8Env =
Env([
0	,
-0.035695177	,
19.95477751	,
19.844311	,
31.79454563	,
31.79454563	,
39.47862349	,
43.2721757	,
46.28613637	,
46.58676993	,
45.14646657	,
44.8455689	,
48.60345954	,
51.68916397	,
52.22365233	,
54.24027979	,
53.92963506	,
53.25795319	,
53.04292633	,
54.22642288	,
54.98349729	,
54.45612979	,
55.63298873	,
55.63298873	,
56.26983254	,
56.80014647	,
57.87531123	,
57.87531123	,
57.87531123	,
58.73508721	,
56.89593234	,
59.72174435	,
57.00372427	,
57.00372427	,
58.51643223	,
58.51643223	,
56.77221411	,
57.63120039	,
57.63120039	,
57.63120039	,
57.63120039	,
59.13263006	,
59.13263006	,
60.54573733	,
60.54573733	,
56.95182012	,
56.95182012	,
56.42126427	,
56.65253048	,
54.07997268	,
51.10271673	,
48.98833834	,
46.06280906	,
45.76084832	,
41.42529877	,
35.85020778	,
8.840292974	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn8Env.plot;


SynthDef.new("hornHarmonic1", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn1Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic2", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn2Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic3", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn3Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic4", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn4Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic5", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn5Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic6", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn6Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic7", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn7Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic8", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn8Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

)



//BLOCK4 -Bundled chords with tonic changer
(
(
s.sendBundle(0.0, //sound delay
	["/s_new", "hornHarmonic1", x = s.nextNodeID, 1, 1, freq:(261.6*2), dur:1, amp:0.1, pan:0, ratio:(1/1)],
	["/s_new", "hornHarmonic2", y = s.nextNodeID, 1, 1, freq:(261.6*2), dur:1, amp:0.07, pan:0, ratio:(2/1)],
	["/s_new", "hornHarmonic3", z = s.nextNodeID, 1, 1, freq:(261.6*2), dur:1, amp:0.06, pan:0, ratio:(3/1)],
	["/s_new", "hornHarmonic4", a = s.nextNodeID, 1, 1, freq:(261.6*2), dur:1, amp:0.04, pan:0, ratio:(4/1)],
	["/s_new", "hornHarmonic5", a = s.nextNodeID, 1, 1, freq:(261.6*2), dur:1, amp:0.04, pan:0, ratio:(5/1)],
	["/s_new", "hornHarmonic6", a = s.nextNodeID, 1, 1, freq:(261.6*2), dur:1, amp:0.01, pan:0, ratio:(6/1)],
	["/s_new", "hornHarmonic7", a = s.nextNodeID, 1, 1, freq:(261.6*2), dur:1, amp:0.005, pan:0, ratio:(7/1)],
	["/s_new", "hornHarmonic8", a = s.nextNodeID, 1, 1, freq:(261.6*2), dur:1, amp:0.002, pan:0, ratio:(8/1)]
); //sound and ID for stacking (if multiple sounds bundled)


// s.sendBundle(100, ["/n_free", x],["/n_free", y],["/n_free", z]);//sound ends, at least frees up memory space
);
)
