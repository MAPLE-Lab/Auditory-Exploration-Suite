////////////////////////////START OF PROGRAM/////////////////////////

//BLOCK1 - Replace the Env section to plot the envelope, to pretest
Env([0,0.2,0.9,1,0.4,0]*0.2, [0.2,0.1,0.1,1,5]*1,[2,0.1,-10,6,-20]).plot; //see below in BLOCK2 for the relevant arg locations

//BLOCK2 - Define the sound
(

var horn1Env, horn2Env, horn3Env, horn4Env, horn5Env, horn6Env, horn7Env, horn8Env;


horn1Env =
Env([
0	,
54.46009171	,
54.22642288	,
52.02507377	,
75.39767434	,
75.01288706	,
75.39767434	,
75.87911293	,
74.03982656	,
71.35098251	,
71.59568395	,
68.55523304	,
68.55523304	,
70.0034843	,
71.58116389	,
71.37793434	,
83.68926383	,
84.05116779	,
87.08179527	,
87.08179527	,
90.36869138	,
87.19318285	,
87.93921382	,
87.57464513	,
85.07651171	,
85.07651171	,
78.80771406	,
76.95683645	,
76.60011484	,
76.95683645	,
82.57535016	,
89.7635518	,
90.12957227	,
96.11369007	,
96.75815512	,
96.75815512	,
94.70090462	,
94.33196037	,
90.67042828	,
86.11669063	,
85.86446769	,
75.65507665	,
75.28471406	,
68.32052358	,
58.01144902	,
57.67120654	,
51.79716424	,
51.79716424	,
60.26750195	,
64.17608344	,
63.69568859	,
67.91318939	,
68.50580939	,
66.69978439	,
66.57680065	,
63.82997526	,
59.8948458	,
57.52320737	,
55.76821448	,
51.80894844	,
52.14499179	,
0	,
]*0.005, [
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn1Env.plot;

horn2Env =
Env([
0	,
19.47421668	,
19.47421668	,
19.47421668	,
84.15765834	,
83.54457332	,
92.39123962	,
92.75895876	,
93.01433674	,
96.09410564	,
96.35092996	,
105.4932043	,
105.1178629	,
109.5668836	,
111.9348032	,
112.8426691	,
115.2371294	,
115.5014244	,
114.972929	,
114.3285	,
118.8197844	,
118.1720281	,
117.7899312	,
116.0796189	,
113.4500394	,
112.9364208	,
113.9774356	,
113.9774356	,
111.8835331	,
111.3554432	,
113.9774356	,
116.211905	,
116.5954433	,
117.0083595	,
116.0953127	,
116.0953127	,
115.0512836	,
115.4342218	,
113.465677	,
109.1359993	,
108.8895827	,
99.39534214	,
99.13723952	,
95.52860868	,
88.39204744	,
88.02717579	,
79.23569627	,
78.87726171	,
74.81434669	,
73.5957578	,
73.5957578	,
65.46552948	,
66.17531839	,
60.45296814	,
60.45296814	,
56.07068608	,
46.11477356	,
41.61614874	,
37.84794229	,
32.56163744	,
32.23995487	,
0	,
]*0.005, [
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn2Env.plot;

horn3Env =
Env([
0	,
14.68281585	,
14.68281585	,
15.58406965	,
73.79376221	,
73.43950058	,
99.45660249	,
97.93563284	,
100.1177202	,
104.3413591	,
104.3413591	,
110.3493744	,
111.3999926	,
114.9505435	,
116.7727001	,
117.154281	,
120.1958374	,
120.5813927	,
121.8973268	,
122.6838787	,
123.738361	,
125.5972685	,
124.1233911	,
124.3907562	,
123.6025123	,
123.2177334	,
125.0618263	,
125.0618263	,
123.3376739	,
123.3376739	,
123.3376739	,
119.6144865	,
119.6144865	,
119.4816035	,
117.7697079	,
118.417121	,
116.3105744	,
116.3105744	,
115.266242	,
112.2447313	,
111.8657009	,
102.3425607	,
101.5781318	,
101.2050351	,
88.49940895	,
88.51658875	,
57.93336335	,
58.51041616	,
53.02715042	,
47.84110166	,
47.74038717	,
18.98451539	,
19.67472205	,
9.975623273	,
9.479411312	,
17.23487317	,
13.63332898	,
12.74618677	,
7.343961324	,
6.166336594	,
4.981632406	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn3Env.plot;

horn4Env =
Env([
0	,
11.60900385	,
12.30276696	,
11.86112772	,
62.27234991	,
63.21793305	,
88.09369304	,
88.09369304	,
91.77097628	,
96.12892285	,
95.27430933	,
106.2732633	,
106.9280614	,
112.0195184	,
112.7935659	,
113.1730867	,
116.5976868	,
116.8624663	,
118.7072872	,
118.7072872	,
122.4238681	,
122.0396615	,
122.0396615	,
118.7230358	,
115.6873835	,
115.9495979	,
116.0841028	,
115.0244183	,
114.2457498	,
115.9495979	,
117.012849	,
115.0400896	,
114.7759601	,
113.2065834	,
111.9035949	,
111.5247458	,
109.2870005	,
109.2870005	,
107.0763638	,
103.5679703	,
103.5679703	,
92.99918406	,
91.73425701	,
90.47643598	,
77.77832497	,
78.02441865	,
24.44887008	,
25.76054615	,
14.13838273	,
13.87694729	,
14.04753729	,
3.209851425	,
3.933938958	,
2.949247781	,
2.203177667	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn4Env.plot;

horn5Env =
Env([
0	,
7.785689797	,
8.027106368	,
8.027106368	,
72.71310653	,
73.32911188	,
78.37590086	,
77.65847936	,
72.35970856	,
77.53446057	,
77.53446057	,
75.57972445	,
75.57972445	,
77.67319561	,
82.70065035	,
81.82207944	,
83.94256998	,
84.30465124	,
86.03972856	,
86.40325834	,
90.92918856	,
99.02353331	,
99.02353331	,
99.02353331	,
96.18768148	,
96.94334802	,
92.2117914	,
92.59670084	,
85.00610152	,
85.00610152	,
90.93565909	,
73.90635117	,
73.90635117	,
72.32230662	,
77.86875485	,
78.22643669	,
76.62738394	,
76.62738394	,
69.50572592	,
67.57200026	,
67.55967349	,
36.49917828	,
35.19234078	,
46.87423	,
26.91714726	,
27.03420125	,
24.24664964	,
25.37829828	,
6.654755808	,
2.562795126	,
1.625881154	,
-0.009873011	,
0.458111858	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn5Env.plot;

horn6Env =
Env([
0	,
0	,
15.62336047	,
15.62336047	,
65.21424087	,
65.21424087	,
77.6837075	,
77.6837075	,
80.66150122	,
81.27110321	,
80.91117817	,
87.94994013	,
89.31604183	,
90.064963	,
88.55524525	,
88.55524525	,
92.60102713	,
92.60102713	,
95.66123506	,
95.66123506	,
97.96400748	,
102.3513525	,
102.610765	,
101.198453	,
100.1768606	,
100.5515455	,
103.391827	,
103.651655	,
104.0283685	,
104.0283685	,
105.3143388	,
98.30460526	,
98.30460526	,
98.93608113	,
100.2119094	,
100.2119094	,
100.2119094	,
100.9593494	,
94.81380416	,
94.07383673	,
93.0662918	,
67.88234728	,
67.30500425	,
74.76002443	,
49.91769654	,
49.58418275	,
22.70139564	,
22.49019836	,
5.785512565	,
-0.159150003	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn6Env.plot;

horn7Env =
Env([
0	,
15.12975277	,
15.12975277	,
15.12975277	,
80.38446511	,
79.29053909	,
88.85814862	,
88.1108601	,
88.1108601	,
87.7461764	,
88.87319072	,
95.61557348	,
95.61557348	,
97.30300125	,
99.09569061	,
99.09569061	,
102.969277	,
103.3455972	,
105.4291605	,
105.3143388	,
109.9135613	,
110.5718324	,
111.5915868	,
108.3393475	,
107.3066287	,
105.8996941	,
107.4527987	,
107.8294417	,
108.0754794	,
107.6987009	,
106.9302746	,
101.3279135	,
101.3279135	,
101.3279135	,
103.7661883	,
103.7661883	,
99.11099779	,
99.11099779	,
95.77431682	,
92.32853448	,
92.32853448	,
69.20652953	,
69.20652953	,
70.65910724	,
54.13142042	,
54.24819829	,
16.2340818	,
16.2340818	,
1.675932512	,
1.002347159	,
0.723958001	,
0.267192432	,
-0.142800521	,
4.204048321	,
3.805098088	,
0	,
]*0.005, [
	0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
	0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn7Env.plot;

horn8Env =
Env([
0	,
6.57736589	,
6.800893854	,
7.113904626	,
61.32715692	,
60.98166993	,
68.56347089	,
68.56347089	,
68.56347089	,
70.37977481	,
69.66263168	,
79.53740849	,
78.81825094	,
81.05088284	,
75.5901893	,
76.3191263	,
80.75458638	,
80.75458638	,
84.2386058	,
84.2386058	,
93.38245189	,
91.25712162	,
90.25235043	,
87.6153789	,
86.49097026	,
85.1170552	,
89.29668656	,
88.67552732	,
89.42358343	,
89.05802716	,
92.85200719	,
85.00610152	,
83.90424678	,
83.16389157	,
86.79058282	,
86.79058282	,
86.42678939	,
86.06324356	,
78.79928473	,
75.33909887	,
73.99602557	,
49.06031846	,
48.95916243	,
48.95916243	,
46.11477356	,
45.65899102	,
5.003794283	,
4.580592614	,
0	,
]*0.005, [
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
0.04	,
],[
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
0	,
]);
// horn8Env.plot;


SynthDef.new("hornHarmonic1", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn1Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic2", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn2Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic3", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn3Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic4", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn4Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic5", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn5Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic6", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn6Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic7", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn7Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

SynthDef.new("hornHarmonic8", {
	arg freq, amp, pan, dur, ratio;
	var sound, env_gen, env;


	env_gen = EnvGen.kr(horn8Env); //loads the envelope as a control UGen
	sound = SinOsc.ar((freq*ratio), mul: env_gen*amp); //uses envelope as a multiplier of amplitude

	Out.ar(0, Pan2.ar(sound, pan)); //sends to busses? // send output to audio bus zero.
}).send(s);

)



//BLOCK4 -Bundled chords with tonic changer
(
(
s.sendBundle(0.0, //sound delay
	["/s_new", "hornHarmonic1", x = s.nextNodeID, 1, 1, freq:(261.6), dur:1, amp:0.01, pan:0, ratio:(1/1)],
	["/s_new", "hornHarmonic2", y = s.nextNodeID, 1, 1, freq:(261.6), dur:1, amp:0.04, pan:0, ratio:(2/1)],
	["/s_new", "hornHarmonic3", z = s.nextNodeID, 1, 1, freq:(261.6), dur:1, amp:0.08, pan:0, ratio:(3/1)],
	["/s_new", "hornHarmonic4", a = s.nextNodeID, 1, 1, freq:(261.6), dur:1, amp:0.06, pan:0, ratio:(4/1)],
	["/s_new", "hornHarmonic5", a = s.nextNodeID, 1, 1, freq:(261.6), dur:1, amp:0.025, pan:0, ratio:(5/1)],
	["/s_new", "hornHarmonic6", a = s.nextNodeID, 1, 1, freq:(261.6), dur:1, amp:0.035, pan:0, ratio:(6/1)],
	["/s_new", "hornHarmonic7", a = s.nextNodeID, 1, 1, freq:(261.6), dur:1, amp:0.045, pan:0, ratio:(7/1)],
	["/s_new", "hornHarmonic8", a = s.nextNodeID, 1, 1, freq:(261.6), dur:1, amp:0.01, pan:0, ratio:(8/1)]
); //sound and ID for stacking (if multiple sounds bundled)


// s.sendBundle(100, ["/n_free", x],["/n_free", y],["/n_free", z]);//sound ends, at least frees up memory space
);
)
